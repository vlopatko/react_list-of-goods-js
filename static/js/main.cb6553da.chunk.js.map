{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","goodName","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAyBbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA1BiB,SAACC,EAAOL,GAA+B,IAApBE,IAAmB,yDACzDI,EAAa,YAAOD,GAmBxB,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,IACFI,EAAgBA,EAAcJ,WAGzBI,EAMcM,CAAiBjB,EAAiBK,EAAWE,GAElE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYf,IAAcJ,IAGhCoB,QAAS,kBAAMf,EAAaL,IAT9B,iCAcA,wBACEkB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYf,IAAcH,IAGhCmB,QAAS,kBAAMf,EAAaJ,IAT9B,4BAcA,wBACEiB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAab,IAGnBc,QAAS,kBAAMb,GAAYD,IAT7B,sBAcEF,EAAUW,OAAS,GAAKT,IACxB,wBACEY,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,YACrCC,QAAS,WACPf,EAAa,IACbE,GAAW,IALf,sBAaJ,6BACGC,EAAaa,KAAI,SAAAC,GAAQ,OACxB,oBAAI,UAAQ,OAAZ,SAAmCA,GAAXA,YC5GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cb6553da.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nconst getPreparedGoods = (goods, sortField, reverse = true) => {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n            )\n          }\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortField !== SORT_FIELD_LENGTH },\n            )\n          }\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !reverse },\n            )\n          }\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField.length > 0 || reverse) && (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', 'is-light')}\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(goodName => (\n          <li data-cy=\"Good\" key={goodName}>{goodName}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}